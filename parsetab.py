
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSnonassocANDOREQUALCOMPAREleftTIMESDIVIDEAND COMPARE DIVIDE ELSE EQUAL FALSE FOR FUNCTION IF LACCOL LPAREN MINUS NAME NUMBER OR PLUS PRINT RACCOL RPAREN SEMICOLON SEPARATOR TIMES TRUE WHILEstart : blocbloc : bloc statement SEMICOLON\n                            | statement SEMICOLONstatement : expressionstatement : PRINT LPAREN expression RPARENexpression : expression PLUS expressionexpression : TRUEexpression : FALSEstatement : NAME EQUAL expressionexpression : expression COMPARE expressionexpression : expression AND expression\n                                | expression OR expressionexpression : expression TIMES expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : IF expression LACCOL bloc RACCOL\n                                | IF expression LACCOL bloc RACCOL ELSE LACCOL bloc RACCOLexpression : WHILE expression LACCOL bloc RACCOLexpression : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOL bloc RACCOLparams : params SEPARATOR expression\n                        | expressionexpression : FUNCTION NAME LPAREN RPAREN LACCOL bloc RACCOL\n                                | FUNCTION NAME LPAREN params RPAREN LACCOL bloc RACCOLexpression : NUMBERexpression : NAMEexpression : NAME LPAREN RPAREN\n                       | NAME LPAREN params RPAREN'
    
_lr_action_items = {'PRINT':([0,2,16,31,33,47,48,54,55,63,66,67,68,69,72,73,77,78,],[5,5,-3,5,-2,5,5,5,5,5,5,5,5,5,5,5,5,5,]),'NAME':([0,2,6,10,11,13,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[7,7,26,26,26,32,-3,26,26,26,26,26,26,26,26,26,26,7,-2,7,7,26,26,7,7,26,7,7,7,7,7,7,7,7,7,]),'TRUE':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[8,8,8,8,8,-3,8,8,8,8,8,8,8,8,8,8,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'FALSE':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[9,9,9,9,9,-3,9,9,9,9,9,9,9,9,9,9,9,-2,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'LPAREN':([0,2,5,6,7,10,11,12,16,17,18,19,20,21,22,23,24,26,27,28,31,32,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[6,6,24,6,28,6,6,31,-3,6,6,6,6,6,6,6,6,28,6,6,6,50,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'IF':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[10,10,10,10,10,-3,10,10,10,10,10,10,10,10,10,10,10,-2,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'WHILE':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[11,11,11,11,11,-3,11,11,11,11,11,11,11,11,11,11,11,-2,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'FOR':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[12,12,12,12,12,-3,12,12,12,12,12,12,12,12,12,12,12,-2,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'FUNCTION':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[13,13,13,13,13,-3,13,13,13,13,13,13,13,13,13,13,13,-2,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'NUMBER':([0,2,6,10,11,16,17,18,19,20,21,22,23,24,27,28,31,33,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[14,14,14,14,14,-3,14,14,14,14,14,14,14,14,14,14,14,-2,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'$end':([1,2,16,33,],[0,-1,-3,-2,]),'SEMICOLON':([3,4,7,8,9,14,15,26,34,35,36,37,38,39,40,42,43,44,49,51,52,60,61,62,71,75,76,79,],[16,-4,-26,-7,-8,-25,33,-26,-6,-10,-11,-12,-13,-14,-15,-16,-9,-27,56,-5,-28,-17,-19,66,-23,-24,-18,-20,]),'RPAREN':([4,7,8,9,14,25,26,28,34,35,36,37,38,39,40,41,42,43,44,45,46,50,51,52,58,59,60,61,70,71,75,76,79,],[-4,-26,-7,-8,-25,42,-26,44,-6,-10,-11,-12,-13,-14,-15,51,-16,-9,-27,52,-22,57,-5,-28,64,-21,-17,-19,74,-23,-24,-18,-20,]),'PLUS':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[17,-26,-7,-8,-25,17,-26,17,17,-6,-10,-11,-12,-13,-14,-15,17,-16,17,-27,17,-28,17,-17,-19,17,-23,-24,-18,-20,]),'COMPARE':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[18,-26,-7,-8,-25,18,-26,18,18,18,None,None,None,-13,18,-15,18,-16,18,-27,18,-28,18,-17,-19,18,-23,-24,-18,-20,]),'AND':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[19,-26,-7,-8,-25,19,-26,19,19,19,None,None,None,-13,19,-15,19,-16,19,-27,19,-28,19,-17,-19,19,-23,-24,-18,-20,]),'OR':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[20,-26,-7,-8,-25,20,-26,20,20,20,None,None,None,-13,20,-15,20,-16,20,-27,20,-28,20,-17,-19,20,-23,-24,-18,-20,]),'TIMES':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[21,-26,-7,-8,-25,21,-26,21,21,21,21,21,21,-13,21,-15,21,-16,21,-27,21,-28,21,-17,-19,21,-23,-24,-18,-20,]),'MINUS':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[22,-26,-7,-8,-25,22,-26,22,22,-6,-10,-11,-12,-13,-14,-15,22,-16,22,-27,22,-28,22,-17,-19,22,-23,-24,-18,-20,]),'DIVIDE':([4,7,8,9,14,25,26,29,30,34,35,36,37,38,39,40,41,42,43,44,46,52,59,60,61,62,71,75,76,79,],[23,-26,-7,-8,-25,23,-26,23,23,23,23,23,23,-13,23,-15,23,-16,23,-27,23,-28,23,-17,-19,23,-23,-24,-18,-20,]),'EQUAL':([7,],[27,]),'LACCOL':([8,9,14,26,29,30,34,35,36,37,38,39,40,42,44,52,57,60,61,64,65,71,74,75,76,79,],[-7,-8,-25,-26,47,48,-6,-10,-11,-12,-13,-14,-15,-16,-27,-28,63,-17,-19,68,69,-23,77,-24,-18,-20,]),'SEPARATOR':([8,9,14,26,34,35,36,37,38,39,40,42,44,45,46,52,58,59,60,61,71,75,76,79,],[-7,-8,-25,-26,-6,-10,-11,-12,-13,-14,-15,-16,-27,53,-22,-28,53,-21,-17,-19,-23,-24,-18,-20,]),'RACCOL':([16,33,54,55,67,72,73,78,],[-3,-2,60,61,71,75,76,79,]),'ELSE':([60,],[65,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,47,48,63,68,69,77,],[2,54,55,67,72,73,78,]),'statement':([0,2,31,47,48,54,55,63,66,67,68,69,72,73,77,78,],[3,15,49,3,3,15,15,3,70,15,3,3,15,15,3,15,]),'expression':([0,2,6,10,11,17,18,19,20,21,22,23,24,27,28,31,47,48,50,53,54,55,56,63,66,67,68,69,72,73,77,78,],[4,4,25,29,30,34,35,36,37,38,39,40,41,43,46,4,4,4,46,59,4,4,62,4,4,4,4,4,4,4,4,4,]),'params':([28,50,],[45,58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcBase.py',92),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','calcBase.py',100),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','calcBase.py',101),
  ('statement -> expression','statement',1,'p_statement_expr','calcBase.py',109),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print','calcBase.py',114),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','calcBase.py',119),
  ('expression -> TRUE','expression',1,'p_expressionTrue','calcBase.py',124),
  ('expression -> FALSE','expression',1,'p_expressionFalse','calcBase.py',129),
  ('statement -> NAME EQUAL expression','statement',3,'p_name_assign','calcBase.py',134),
  ('expression -> expression COMPARE expression','expression',3,'p_expression_binop_bool2','calcBase.py',139),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','calcBase.py',145),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','calcBase.py',146),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','calcBase.py',154),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',159),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',160),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',165),
  ('expression -> IF expression LACCOL bloc RACCOL','expression',5,'p_condition','calcBase.py',170),
  ('expression -> IF expression LACCOL bloc RACCOL ELSE LACCOL bloc RACCOL','expression',9,'p_condition','calcBase.py',171),
  ('expression -> WHILE expression LACCOL bloc RACCOL','expression',5,'p_loop','calcBase.py',179),
  ('expression -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOL bloc RACCOL','expression',11,'p_for','calcBase.py',184),
  ('params -> params SEPARATOR expression','params',3,'p_params','calcBase.py',188),
  ('params -> expression','params',1,'p_params','calcBase.py',189),
  ('expression -> FUNCTION NAME LPAREN RPAREN LACCOL bloc RACCOL','expression',7,'p_function','calcBase.py',198),
  ('expression -> FUNCTION NAME LPAREN params RPAREN LACCOL bloc RACCOL','expression',8,'p_function','calcBase.py',199),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',207),
  ('expression -> NAME','expression',1,'p_name','calcBase.py',212),
  ('expression -> NAME LPAREN RPAREN','expression',3,'p_function_call','calcBase.py',217),
  ('expression -> NAME LPAREN params RPAREN','expression',4,'p_function_call','calcBase.py',218),
]
