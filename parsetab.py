
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSnonassocANDOREQUALCOMPAREleftTIMESDIVIDEAND COMPARE DIVIDE ELSE EQUAL FALSE FOR FUNCTION IF LACCOL LPAREN MINUS NAME NUMBER OR PLUS PRINT QUOTE RACCOL RPAREN SEMICOLON SEPARATOR TIMES TRUE WHILEstart : blocbloc : bloc statement SEMICOLON\n                            | statement SEMICOLONstatement : PRINT LPAREN params RPARENexpression : expression PLUS expression\n                            | expression PLUSexpression : TRUEexpression : FALSEstatement : NAME EQUAL expressionexpression : expression COMPARE expressionexpression : expression AND expression\n                                | expression OR expressionexpression : expression TIMES expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : IF expression LACCOL bloc RACCOL\n                                | IF expression LACCOL bloc RACCOL ELSE LACCOL bloc RACCOLstatement : WHILE expression LACCOL bloc RACCOLstatement : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOL bloc RACCOLparams : expression SEPARATOR params\n                        | expressionstatement : FUNCTION NAME LPAREN RPAREN LACCOL bloc RACCOL\n                                | FUNCTION NAME LPAREN params RPAREN LACCOL bloc RACCOLexpression : NUMBERexpression : NAMEexpression : QUOTE expression\n                        | NAME QUOTE\n                        | NAME expressionstatement : NAME LPAREN RPAREN\n                       | NAME LPAREN params RPAREN'
    
_lr_action_items = {'PRINT':([0,2,10,22,24,30,48,57,63,65,68,69,70,74,75,78,79,81,],[4,4,-3,4,-2,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NAME':([0,2,6,8,10,11,12,13,17,18,20,21,22,24,30,31,32,33,34,35,36,37,40,44,46,48,57,58,63,65,68,69,70,74,75,78,79,81,],[5,5,20,23,-3,20,20,20,20,20,20,20,5,-2,5,20,20,20,20,20,20,20,20,20,20,5,5,20,5,5,5,5,5,5,5,5,5,5,]),'WHILE':([0,2,10,22,24,30,48,57,63,65,68,69,70,74,75,78,79,81,],[6,6,-3,6,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'FOR':([0,2,10,22,24,30,48,57,63,65,68,69,70,74,75,78,79,81,],[7,7,-3,7,-2,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'FUNCTION':([0,2,10,22,24,30,48,57,63,65,68,69,70,74,75,78,79,81,],[8,8,-3,8,-2,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'$end':([1,2,10,24,],[0,-1,-3,-2,]),'SEMICOLON':([3,9,15,16,19,20,27,28,31,40,41,42,43,45,47,49,50,51,52,53,54,55,56,62,64,67,73,77,80,82,],[10,24,-7,-8,-25,-26,-9,-30,-6,-28,-29,-27,58,-4,-31,-5,-10,-11,-12,-13,-14,-15,-16,-19,68,-17,-23,-24,-18,-20,]),'LPAREN':([4,5,6,7,11,12,13,17,18,20,21,23,31,32,33,34,35,36,37,40,44,46,58,],[11,13,17,22,17,17,17,17,17,17,17,44,17,17,17,17,17,17,17,17,17,17,17,]),'EQUAL':([5,],[12,]),'TRUE':([6,11,12,13,17,18,20,21,31,32,33,34,35,36,37,40,44,46,58,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'FALSE':([6,11,12,13,17,18,20,21,31,32,33,34,35,36,37,40,44,46,58,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'IF':([6,11,12,13,17,18,20,21,31,32,33,34,35,36,37,40,44,46,58,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'NUMBER':([6,11,12,13,17,18,20,21,31,32,33,34,35,36,37,40,44,46,58,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'QUOTE':([6,11,12,13,17,18,20,21,31,32,33,34,35,36,37,40,44,46,58,],[21,21,21,21,21,21,40,21,21,21,21,21,21,21,21,21,21,21,21,]),'RACCOL':([10,24,48,63,69,74,78,81,],[-3,-2,62,67,73,77,80,82,]),'RPAREN':([13,15,16,19,20,25,26,27,28,29,31,38,40,41,42,44,45,47,49,50,51,52,53,54,55,56,60,61,62,67,72,73,77,80,82,],[28,-7,-8,-25,-26,45,-22,-9,-30,47,-6,56,-28,-29,-27,59,-4,-31,-5,-10,-11,-12,-13,-14,-15,-16,66,-21,-19,-17,76,-23,-24,-18,-20,]),'LACCOL':([14,15,16,19,20,31,39,40,41,42,49,50,51,52,53,54,55,56,59,66,67,71,76,80,],[30,-7,-8,-25,-26,-6,57,-28,-29,-27,-5,-10,-11,-12,-13,-14,-15,-16,65,70,-17,75,79,-18,]),'PLUS':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[31,-7,-8,-25,-26,31,31,-6,31,31,-28,31,31,-5,-10,-11,-12,-13,-14,-15,-16,31,-17,-18,]),'COMPARE':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[32,-7,-8,-25,-26,32,32,-6,32,32,-28,32,32,32,None,None,None,-13,32,-15,-16,32,-17,-18,]),'AND':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[33,-7,-8,-25,-26,33,33,-6,33,33,-28,33,33,33,None,None,None,-13,33,-15,-16,33,-17,-18,]),'OR':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[34,-7,-8,-25,-26,34,34,-6,34,34,-28,34,34,34,None,None,None,-13,34,-15,-16,34,-17,-18,]),'TIMES':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[35,-7,-8,-25,-26,35,35,-6,35,35,-28,35,35,35,35,35,35,-13,35,-15,-16,35,-17,-18,]),'MINUS':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[36,-7,-8,-25,-26,36,36,-6,36,36,-28,36,36,-5,-10,-11,-12,-13,-14,-15,-16,36,-17,-18,]),'DIVIDE':([14,15,16,19,20,26,27,31,38,39,40,41,42,49,50,51,52,53,54,55,56,64,67,80,],[37,-7,-8,-25,-26,37,37,-6,37,37,-28,37,37,37,37,37,37,-13,37,-15,-16,37,-17,-18,]),'SEPARATOR':([15,16,19,20,26,31,40,41,42,49,50,51,52,53,54,55,56,67,80,],[-7,-8,-25,-26,46,-6,-28,-29,-27,-5,-10,-11,-12,-13,-14,-15,-16,-17,-18,]),'ELSE':([67,],[71,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,30,57,65,70,75,79,],[2,48,63,69,74,78,81,]),'statement':([0,2,22,30,48,57,63,65,68,69,70,74,75,78,79,81,],[3,9,43,3,9,3,9,3,72,9,3,9,3,9,3,9,]),'expression':([6,11,12,13,17,18,20,21,31,32,33,34,35,36,37,40,44,46,58,],[14,26,27,26,38,39,41,42,49,50,51,52,53,54,55,42,26,26,64,]),'params':([11,13,44,46,],[25,29,60,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcBase.py',94),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','calcBase.py',102),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','calcBase.py',103),
  ('statement -> PRINT LPAREN params RPAREN','statement',4,'p_print','calcBase.py',111),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','calcBase.py',116),
  ('expression -> expression PLUS','expression',2,'p_expression_binop_plus','calcBase.py',117),
  ('expression -> TRUE','expression',1,'p_expressionTrue','calcBase.py',127),
  ('expression -> FALSE','expression',1,'p_expressionFalse','calcBase.py',132),
  ('statement -> NAME EQUAL expression','statement',3,'p_name_assign','calcBase.py',137),
  ('expression -> expression COMPARE expression','expression',3,'p_expression_binop_bool2','calcBase.py',142),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','calcBase.py',148),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','calcBase.py',149),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','calcBase.py',157),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',162),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',163),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',168),
  ('expression -> IF expression LACCOL bloc RACCOL','expression',5,'p_condition','calcBase.py',173),
  ('expression -> IF expression LACCOL bloc RACCOL ELSE LACCOL bloc RACCOL','expression',9,'p_condition','calcBase.py',174),
  ('statement -> WHILE expression LACCOL bloc RACCOL','statement',5,'p_loop','calcBase.py',182),
  ('statement -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOL bloc RACCOL','statement',11,'p_for','calcBase.py',187),
  ('params -> expression SEPARATOR params','params',3,'p_params','calcBase.py',192),
  ('params -> expression','params',1,'p_params','calcBase.py',193),
  ('statement -> FUNCTION NAME LPAREN RPAREN LACCOL bloc RACCOL','statement',7,'p_function','calcBase.py',202),
  ('statement -> FUNCTION NAME LPAREN params RPAREN LACCOL bloc RACCOL','statement',8,'p_function','calcBase.py',203),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',211),
  ('expression -> NAME','expression',1,'p_name','calcBase.py',216),
  ('expression -> QUOTE expression','expression',2,'p_word','calcBase.py',220),
  ('expression -> NAME QUOTE','expression',2,'p_word','calcBase.py',221),
  ('expression -> NAME expression','expression',2,'p_word','calcBase.py',222),
  ('statement -> NAME LPAREN RPAREN','statement',3,'p_function_call','calcBase.py',233),
  ('statement -> NAME LPAREN params RPAREN','statement',4,'p_function_call','calcBase.py',234),
]
