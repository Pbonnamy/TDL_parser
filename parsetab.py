
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSnonassocANDOREQUALCOMPAREleftTIMESDIVIDEAND COMPARE DIVIDE ELSE EQUAL FALSE FOR FUNCTION IF LACCOL LPAREN MINUS NAME NUMBER OR PLUS PRINT QUOTE RACCOL RPAREN SEMICOLON SEPARATOR TIMES TRUE WHILEstart : blocbloc : bloc statement SEMICOLON\n                            | statement SEMICOLONstatement : PRINT LPAREN params RPARENexpression : expression PLUS expression\n                        | PLUS expression : TRUEexpression : FALSEstatement : NAME EQUAL expressionexpression : expression COMPARE expressionexpression : expression AND expression\n                                | expression OR expressionexpression : expression TIMES expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : IF expression LACCOL bloc RACCOL\n                                | IF expression LACCOL bloc RACCOL ELSE LACCOL bloc RACCOLexpression : WHILE expression LACCOL bloc RACCOLexpression : FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOL bloc RACCOLparams : expression SEPARATOR params\n                        | expressionstatement : FUNCTION NAME LPAREN RPAREN LACCOL bloc RACCOL\n                                | FUNCTION NAME LPAREN params RPAREN LACCOL bloc RACCOLexpression : NUMBERexpression : NAMEexpression : QUOTE expression\n                        | NAME QUOTE\n                        | NAME expressionstatement : NAME LPAREN RPAREN\n                       | NAME LPAREN params RPAREN'
    
_lr_action_items = {'PRINT':([0,2,8,13,42,58,59,61,63,64,66,67,72,74,76,78,81,82,],[4,4,-3,-2,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'NAME':([0,2,6,8,9,10,11,13,14,20,21,24,25,29,32,33,34,35,36,37,38,39,42,43,58,59,61,63,64,65,66,67,72,74,76,78,81,82,],[5,5,12,-3,24,24,24,-2,24,24,24,24,24,24,24,24,24,24,24,24,24,24,5,24,5,5,5,5,5,24,5,5,5,5,5,5,5,5,]),'FUNCTION':([0,2,8,13,42,58,59,61,63,64,66,67,72,74,76,78,81,82,],[6,6,-3,-2,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'$end':([1,2,8,13,],[0,-1,-3,-2,]),'SEMICOLON':([3,7,17,18,19,23,24,26,27,31,43,44,45,46,49,51,52,53,54,55,56,57,60,68,69,70,71,75,80,83,],[8,13,-6,-7,-8,-25,-26,-9,-30,-4,-28,-29,-27,-31,-16,-5,-10,-11,-12,-13,-14,-15,65,-17,-19,74,-23,-24,-18,-20,]),'LPAREN':([4,5,9,10,11,12,14,20,21,22,24,25,29,32,33,34,35,36,37,38,39,43,65,],[9,11,14,14,14,29,14,14,14,42,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'EQUAL':([5,],[10,]),'RACCOL':([8,13,63,64,66,72,78,82,],[-3,-2,68,69,71,75,80,83,]),'PLUS':([9,10,11,14,16,17,18,19,20,21,23,24,25,26,29,30,32,33,34,35,36,37,38,39,40,41,43,44,45,49,51,52,53,54,55,56,57,65,68,69,70,80,83,],[17,17,17,17,33,-6,-7,-8,17,17,-25,17,17,33,17,33,17,17,17,17,17,17,17,17,33,33,17,33,33,-16,-5,-10,-11,-12,-13,-14,-15,17,-17,-19,33,-18,-20,]),'TRUE':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'FALSE':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'IF':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'WHILE':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'FOR':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'NUMBER':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'QUOTE':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[25,25,25,25,25,25,43,25,25,25,25,25,25,25,25,25,25,25,25,]),'RPAREN':([11,15,16,17,18,19,23,24,26,27,28,29,30,31,43,44,45,46,48,49,50,51,52,53,54,55,56,57,68,69,71,75,77,80,83,],[27,31,-22,-6,-7,-8,-25,-26,-9,-30,46,47,49,-4,-28,-29,-27,-31,62,-16,-21,-5,-10,-11,-12,-13,-14,-15,-17,-19,-23,-24,79,-18,-20,]),'SEPARATOR':([16,17,18,19,23,24,43,44,45,49,51,52,53,54,55,56,57,68,69,80,83,],[32,-6,-7,-8,-25,-26,-28,-29,-27,-16,-5,-10,-11,-12,-13,-14,-15,-17,-19,-18,-20,]),'COMPARE':([16,17,18,19,23,24,26,30,40,41,43,44,45,49,51,52,53,54,55,56,57,68,69,70,80,83,],[34,-6,-7,-8,-25,-26,34,34,34,34,-28,34,34,-16,34,None,None,None,-13,34,-15,-17,-19,34,-18,-20,]),'AND':([16,17,18,19,23,24,26,30,40,41,43,44,45,49,51,52,53,54,55,56,57,68,69,70,80,83,],[35,-6,-7,-8,-25,-26,35,35,35,35,-28,35,35,-16,35,None,None,None,-13,35,-15,-17,-19,35,-18,-20,]),'OR':([16,17,18,19,23,24,26,30,40,41,43,44,45,49,51,52,53,54,55,56,57,68,69,70,80,83,],[36,-6,-7,-8,-25,-26,36,36,36,36,-28,36,36,-16,36,None,None,None,-13,36,-15,-17,-19,36,-18,-20,]),'TIMES':([16,17,18,19,23,24,26,30,40,41,43,44,45,49,51,52,53,54,55,56,57,68,69,70,80,83,],[37,-6,-7,-8,-25,-26,37,37,37,37,-28,37,37,-16,37,37,37,37,-13,37,-15,-17,-19,37,-18,-20,]),'MINUS':([16,17,18,19,23,24,26,30,40,41,43,44,45,49,51,52,53,54,55,56,57,68,69,70,80,83,],[38,-6,-7,-8,-25,-26,38,38,38,38,-28,38,38,-16,-5,-10,-11,-12,-13,-14,-15,-17,-19,38,-18,-20,]),'DIVIDE':([16,17,18,19,23,24,26,30,40,41,43,44,45,49,51,52,53,54,55,56,57,68,69,70,80,83,],[39,-6,-7,-8,-25,-26,39,39,39,39,-28,39,39,-16,39,39,39,39,-13,39,-15,-17,-19,39,-18,-20,]),'LACCOL':([17,18,19,23,24,40,41,43,44,45,47,49,51,52,53,54,55,56,57,62,68,69,73,79,80,83,],[-6,-7,-8,-25,-26,58,59,-28,-29,-27,61,-16,-5,-10,-11,-12,-13,-14,-15,67,-17,-19,76,81,-18,-20,]),'ELSE':([68,],[73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,58,59,61,67,76,81,],[2,63,64,66,72,78,82,]),'statement':([0,2,42,58,59,61,63,64,66,67,72,74,76,78,81,82,],[3,7,60,3,3,3,7,7,7,3,7,77,3,7,3,7,]),'params':([9,11,29,32,],[15,28,48,50,]),'expression':([9,10,11,14,20,21,24,25,29,32,33,34,35,36,37,38,39,43,65,],[16,26,16,30,40,41,44,45,16,16,51,52,53,54,55,56,57,45,70,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcBase.py',94),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','calcBase.py',102),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','calcBase.py',103),
  ('statement -> PRINT LPAREN params RPAREN','statement',4,'p_print','calcBase.py',111),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','calcBase.py',116),
  ('expression -> PLUS','expression',1,'p_expression_binop_plus','calcBase.py',117),
  ('expression -> TRUE','expression',1,'p_expressionTrue','calcBase.py',122),
  ('expression -> FALSE','expression',1,'p_expressionFalse','calcBase.py',127),
  ('statement -> NAME EQUAL expression','statement',3,'p_name_assign','calcBase.py',132),
  ('expression -> expression COMPARE expression','expression',3,'p_expression_binop_bool2','calcBase.py',137),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','calcBase.py',143),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','calcBase.py',144),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','calcBase.py',152),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',157),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',158),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',163),
  ('expression -> IF expression LACCOL bloc RACCOL','expression',5,'p_condition','calcBase.py',168),
  ('expression -> IF expression LACCOL bloc RACCOL ELSE LACCOL bloc RACCOL','expression',9,'p_condition','calcBase.py',169),
  ('expression -> WHILE expression LACCOL bloc RACCOL','expression',5,'p_loop','calcBase.py',177),
  ('expression -> FOR LPAREN statement SEMICOLON expression SEMICOLON statement RPAREN LACCOL bloc RACCOL','expression',11,'p_for','calcBase.py',182),
  ('params -> expression SEPARATOR params','params',3,'p_params','calcBase.py',187),
  ('params -> expression','params',1,'p_params','calcBase.py',188),
  ('statement -> FUNCTION NAME LPAREN RPAREN LACCOL bloc RACCOL','statement',7,'p_function','calcBase.py',197),
  ('statement -> FUNCTION NAME LPAREN params RPAREN LACCOL bloc RACCOL','statement',8,'p_function','calcBase.py',198),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',206),
  ('expression -> NAME','expression',1,'p_name','calcBase.py',211),
  ('expression -> QUOTE expression','expression',2,'p_word','calcBase.py',215),
  ('expression -> NAME QUOTE','expression',2,'p_word','calcBase.py',216),
  ('expression -> NAME expression','expression',2,'p_word','calcBase.py',217),
  ('statement -> NAME LPAREN RPAREN','statement',3,'p_function_call','calcBase.py',228),
  ('statement -> NAME LPAREN params RPAREN','statement',4,'p_function_call','calcBase.py',229),
]
