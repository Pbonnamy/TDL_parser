
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSnonassocANDOREQUALCOMPAREleftTIMESDIVIDEAND COMPARE DIVIDE EQUAL FALSE IF LACCOL LPAREN MINUS NAME NUMBER OR PLUS PRINT RACCOL RPAREN SEMICOLON TIMES TRUE WHILEstart : blocbloc : bloc statement SEMICOLON\n                            | statement SEMICOLONstatement : expressionstatement : PRINT LPAREN expression RPARENexpression : expression PLUS expressionexpression : TRUEexpression : FALSEstatement : NAME EQUAL expressionexpression : expression COMPARE expressionexpression : expression AND expression\n                                | expression OR expressionexpression : expression TIMES expressionexpression : expression MINUS expression\n\t\t\t\t| expression DIVIDE expressionexpression : LPAREN expression RPARENexpression : IF expression LACCOL bloc RACCOLexpression : WHILE expression LACCOL bloc RACCOLexpression : NUMBERexpression : NAME'
    
_lr_action_items = {'PRINT':([0,2,14,28,39,40,42,43,],[5,5,-3,-2,5,5,5,5,]),'NAME':([0,2,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[7,7,24,24,24,-3,24,24,24,24,24,24,24,24,24,-2,7,7,7,7,]),'TRUE':([0,2,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[8,8,8,8,8,-3,8,8,8,8,8,8,8,8,8,-2,8,8,8,8,]),'FALSE':([0,2,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[9,9,9,9,9,-3,9,9,9,9,9,9,9,9,9,-2,9,9,9,9,]),'LPAREN':([0,2,5,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[6,6,22,6,6,6,-3,6,6,6,6,6,6,6,6,6,-2,6,6,6,6,]),'IF':([0,2,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[10,10,10,10,10,-3,10,10,10,10,10,10,10,10,10,-2,10,10,10,10,]),'WHILE':([0,2,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[11,11,11,11,11,-3,11,11,11,11,11,11,11,11,11,-2,11,11,11,11,]),'NUMBER':([0,2,6,10,11,14,15,16,17,18,19,20,21,22,25,28,39,40,42,43,],[12,12,12,12,12,-3,12,12,12,12,12,12,12,12,12,-2,12,12,12,12,]),'$end':([1,2,14,28,],[0,-1,-3,-2,]),'SEMICOLON':([3,4,7,8,9,12,13,24,29,30,31,32,33,34,35,37,38,41,44,45,],[14,-4,-20,-7,-8,-19,28,-20,-6,-10,-11,-12,-13,-14,-15,-16,-9,-5,-17,-18,]),'PLUS':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[15,-20,-7,-8,-19,15,-20,15,15,-6,-10,-11,-12,-13,-14,-15,15,-16,15,-17,-18,]),'COMPARE':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[16,-20,-7,-8,-19,16,-20,16,16,16,None,None,None,-13,16,-15,16,-16,16,-17,-18,]),'AND':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[17,-20,-7,-8,-19,17,-20,17,17,17,None,None,None,-13,17,-15,17,-16,17,-17,-18,]),'OR':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[18,-20,-7,-8,-19,18,-20,18,18,18,None,None,None,-13,18,-15,18,-16,18,-17,-18,]),'TIMES':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[19,-20,-7,-8,-19,19,-20,19,19,19,19,19,19,-13,19,-15,19,-16,19,-17,-18,]),'MINUS':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[20,-20,-7,-8,-19,20,-20,20,20,-6,-10,-11,-12,-13,-14,-15,20,-16,20,-17,-18,]),'DIVIDE':([4,7,8,9,12,23,24,26,27,29,30,31,32,33,34,35,36,37,38,44,45,],[21,-20,-7,-8,-19,21,-20,21,21,21,21,21,21,-13,21,-15,21,-16,21,-17,-18,]),'EQUAL':([7,],[25,]),'RPAREN':([8,9,12,23,24,29,30,31,32,33,34,35,36,37,44,45,],[-7,-8,-19,37,-20,-6,-10,-11,-12,-13,-14,-15,41,-16,-17,-18,]),'LACCOL':([8,9,12,24,26,27,29,30,31,32,33,34,35,37,44,45,],[-7,-8,-19,-20,39,40,-6,-10,-11,-12,-13,-14,-15,-16,-17,-18,]),'RACCOL':([14,28,42,43,],[-3,-2,44,45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'bloc':([0,39,40,],[2,42,43,]),'statement':([0,2,39,40,42,43,],[3,13,3,3,13,13,]),'expression':([0,2,6,10,11,15,16,17,18,19,20,21,22,25,39,40,42,43,],[4,4,23,26,27,29,30,31,32,33,34,35,36,38,4,4,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> bloc','start',1,'p_start','calcBase.py',79),
  ('bloc -> bloc statement SEMICOLON','bloc',3,'p_bloc','calcBase.py',86),
  ('bloc -> statement SEMICOLON','bloc',2,'p_bloc','calcBase.py',87),
  ('statement -> expression','statement',1,'p_statement_expr','calcBase.py',94),
  ('statement -> PRINT LPAREN expression RPAREN','statement',4,'p_print','calcBase.py',98),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop_plus','calcBase.py',102),
  ('expression -> TRUE','expression',1,'p_expressionTrue','calcBase.py',106),
  ('expression -> FALSE','expression',1,'p_expressionFalse','calcBase.py',110),
  ('statement -> NAME EQUAL expression','statement',3,'p_name_assign','calcBase.py',114),
  ('expression -> expression COMPARE expression','expression',3,'p_expression_binop_bool2','calcBase.py',118),
  ('expression -> expression AND expression','expression',3,'p_expression_binop_bool','calcBase.py',124),
  ('expression -> expression OR expression','expression',3,'p_expression_binop_bool','calcBase.py',125),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop_times','calcBase.py',132),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',136),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop_divide_and_minus','calcBase.py',137),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','calcBase.py',141),
  ('expression -> IF expression LACCOL bloc RACCOL','expression',5,'p_condition','calcBase.py',145),
  ('expression -> WHILE expression LACCOL bloc RACCOL','expression',5,'p_loop','calcBase.py',149),
  ('expression -> NUMBER','expression',1,'p_expression_number','calcBase.py',153),
  ('expression -> NAME','expression',1,'p_name','calcBase.py',157),
]
